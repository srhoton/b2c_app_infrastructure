version: 2.1

parameters:
  GHA_Event:
    type: string
    default: ""
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

orbs: 
  aws-cli: circleci/aws-cli@3.1.4
jobs: 
  aws-cli-cred-setup: 
    executor: aws-cli/default
    steps: 
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
  create-workspace:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform workspace create
          command: |
            cd app_infrastructure
            terraform init -input=false
            terraform workspace new ${CIRCLE_BRANCH}
  init-plan:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init and plan
          command: |
            cd app_infrastructure
            terraform init -input=false
            terraform workspace select ${CIRCLE_BRANCH}
            terraform plan -var="feature=${CIRCLE_BRANCH}"
  apply: 
    docker: 
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps: 
      - checkout
      - run:
          name: terraform apply
          command: | 
            cd app_infrastructure
            terraform init -input=false
            terraform workspace select ${CIRCLE_BRANCH}
            terraform apply -input=false -auto-approve -var="feature=${CIRCLE_BRANCH}"

  destroy: 
    docker: 
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps: 
      - checkout
      - run:
          name: terraform destroy
          command: | 
            cd shared_infrastructure
            terraform init -input=false
            terraform workspace select ${CIRCLE_BRANCH}
            terraform apply -destroy -input=false -auto-approve -var="feature=${CIRCLE_BRANCH}"
            terraform workspace delete ${CIRCLE_BRANCH}

workflows: 
  branch-created: 
    when: 
      equal: [ "create", << pipeline.parameters.GHA_Event >>] 
    jobs: 
      - aws-cli-cred-setup:
          context: aws
      - create-workspace: 
          requires:
            - aws-cli-cred-setup
      - init-plan:
          requires: 
            - create_workspace
      - apply: 
          requires:
            - init-plan
  branch-deleted: 
    when: 
      equal: [ "delete", << pipeline.parameters.GHA_Event >>] 
    jobs: 
      - aws-cli-cred-setup:
          context: aws
      - init-plan:
          requires: 
            - aws-cli-cred-setup
      - destroy: 
          requires:
            - init-plan
  run-plan-apply: 
    jobs:
      - aws-cli-cred-setup:
          context: aws
      - init-plan:
          requires: 
            - aws-cli-cred-setup
      - request-apply: 
          type: approval
          requires: 
            - init-plan
      - apply: 
          requires:
            - request-apply

